// Custom Grid System
// Author: Luiz Gustavo Freire Gama

// Variables

$default-container-with: 100% !default
$default-gutter: 24px !default
$default-cols: 12 !default
$default-direction: 'ltr'
$default-edges: true !default
$fixed-gutter: true !default
//$fluid: true !default // not used for now
//$semantic: true !default // not used for now


// +container
=container($width: $default-container-with, $clear: false)
  @if $clear
    max-width: inherit
    margin-left: inherit
    margin-right: inherit
  @else
    max-width: $width
    margin-left: auto
    margin-right: auto


// +grid
=grid($cols, $total: $default-cols, $gutter: $default-gutter, $edges: $default-edges, $cycle: 0, $uncycle: 0, $direction: $default-direction, $prefix: 0, $suffix: 0, $push: 0, $pull: 0, $parent: false)
  //@warn $gutter
  @if $direction == 'ltr'
    float: left
  @else
    float: right
  $width: ($cols / $total) * 100%
  @if $uncycle > 0
    &:nth-of-type(#{$uncycle}n)
      margin-right: inherit
    &:nth-of-type(#{$uncycle}n+1)
      clear: none
  @if $edges
    @if $parent
      width: $width
    @else
      width: calc(#{$width} - #{$gutter})
      @if $prefix <= 0
        margin-left: $gutter / 2
      @else
        margin-left: calc(#{$width * $prefix} + #{$gutter / 2})
      @if $suffix <= 0
        margin-right: $gutter / 2
      @else
        margin-right: calc(#{$width * $suffix} + #{$gutter / 2})
    @if $push > 0
      position: relative
      left: $width * $push
    @if $pull > 0
      position: relative
      left: -$width * $pull

  @else
    $sum: ($cols / $total) * $gutter
    width: calc(#{$width} + #{$sum} - #{$gutter})
    @if $suffix == 0
      margin-right: $gutter
    @if $prefix > 0
      margin-left: calc(#{$width * $prefix} + #{$sum * $prefix})
    @if $suffix > 0
      margin-right: calc(#{$width * $prefix} + #{$sum * $prefix + $gutter})
    @if $push > 0
      position: relative
      left: calc(#{$width * $push} + #{$sum * $push})
    @if $pull > 0
      position: relative
      left: calc(#{-$width * $pull} - #{$sum * $pull})
    @if $cycle == 0
      &:last-of-type
        margin-right: 0
    @else
      &:nth-of-type(#{$cycle}n)
        margin-right: 0
      &:nth-of-type(#{$cycle}n+1)
        clear: both

=prefix($cols, $total: $default-cols, $gutter: $default-gutter, $edges: $default-edges)
  $width: ($cols / $total) * 100%
  @if $edges
    margin-left: calc(#{$width * $cols} + #{$gutter / 2})
  @else
    $sum: ($cols / $total) * $gutter
    margin-left: calc(#{$width * $cols} + #{$sum * $cols})

=suffix($cols, $total: $default-cols, $gutter: $default-gutter, $edges: $default-edges)
  $width: ($cols / $total) * 100%
  @if $edges
    margin-right: calc(#{$width * $cols} + #{$gutter / 2})
  @else
    $sum: ($cols / $total) * $gutter
    margin-right: calc(#{$width * $cols} + #{$sum * $cols + $gutter})

=push($cols, $total: $default-cols, $relative: true, $gutter: $default-gutter, $edges: $default-edges)
  $width: ($cols / $total) * 100%
  @if $relative
    position: relative
  @if $edges
    left: $width * $cols
  @else
    $sum: ($cols / $total) * $gutter
    left: calc(#{$width * $cols} + #{$sum * $cols})

=pull($cols, $total: $default-cols, $relative: true, $gutter: $default-gutter, $edges: $default-edges)
  $width: ($cols / $total) * 100%
  @if $relative
    position: relative
  @if $edges
    left: -$width * $cols
  @else
    $sum: ($cols / $total) * $gutter
    left: calc(#{-$width * $cols} - #{$sum * $cols})

=gutter($edges: $default-edges)
  @if $edges
    margin-left: $gutter / 2
    margin-right: $gutter / 2
  @else
    margin-right: $gutter

@function gutter()
  @return $default-gutter

// Expand
=expand
  width: 100vw
  position: relative
  margin-left: -50vw
  left: 50%
  text-align: center

=clear
  clear: both
  display: block
  overflow: hidden
  visibility: hidden
  width: 0
  height: 0

=clearfix
  &:before,
  &:after
    content: '\0020'
    display: block
    overflow: hidden
    visibility: hidden
    width: 0
    height: 0
  &:after
    clear: both